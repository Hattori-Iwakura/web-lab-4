@* filepath: c:\Users\ASUS\Desktop\web-lab-4\Areas\Admin\Views\Order\Details.cshtml *@
@model web_lab_4.Models.Order

@{
    ViewData["Title"] = $"Order #{Model.Id}";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">
        <i class="fas fa-file-invoice"></i> Order #@Model.Id
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Back to Orders
        </a>
    </div>
</div>

<div class="row">
    <!-- Order Information -->
    <div class="col-lg-8">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Order Information</h6>
            </div>
            <div class="card-body">
                <div class="row mb-4">
                    <div class="col-md-6">
                        <h6>Order Details</h6>
                        <p class="mb-1"><strong>Order ID:</strong> #@Model.Id</p>
                        <p class="mb-1"><strong>Order Date:</strong> @Model.OrderDate.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                        <p class="mb-1"><strong>Customer ID:</strong> @Model.UserId</p>
                        <p class="mb-1"><strong>Total Amount:</strong> <span class="text-success">@Model.TotalPrice.ToString("C")</span></p>
                    </div>
                    <div class="col-md-6">
                        <h6>Shipping Information</h6>
                        <p class="mb-1"><strong>Address:</strong></p>
                        <p class="text-muted">@Model.ShippingAddress</p>
                        @if (!string.IsNullOrEmpty(Model.Notes))
                        {
                            <p class="mb-1"><strong>Notes:</strong></p>
                            <p class="text-muted">@Model.Notes</p>
                        }
                    </div>
                </div>

                <!-- Order Items -->
                <h6>Order Items</h6>
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead class="table-light">
                            <tr>
                                <th>Product</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th class="text-end">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detail in Model.OrderDetails)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(detail.Product?.ImageUrl))
                                            {
                                                <img src="@detail.Product.ImageUrl" alt="@detail.Product.Name" class="me-2 rounded" style="width: 50px; height: 50px; object-fit: cover;">
                                            }
                                            <div>
                                                <strong>@detail.Product?.Name</strong><br>
                                                <small class="text-muted">ID: @detail.ProductId</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@detail.Price.ToString("C")</td>
                                    <td>@detail.Quantity</td>
                                    <td class="text-end">@((detail.Price * detail.Quantity).ToString("C"))</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot class="table-light">
                            <tr>
                                <th colspan="3" class="text-end">Total:</th>
                                <th class="text-end text-success">@Model.TotalPrice.ToString("C")</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Order Status & Actions -->
    <div class="col-lg-4">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Order Status</h6>
            </div>
            <div class="card-body">
                <div class="text-center mb-4">
                    @{
                        var displayStatus = Model.Status;
                        var statusClass = "";
                        var statusIcon = "";
                        
                        switch (Model.Status?.ToLower())
                        {
                            case "pending":
                                statusClass = "text-warning";
                                statusIcon = "fas fa-clock fa-3x text-warning mb-2";
                                break;
                            case "processing":
                                statusClass = "text-primary";
                                statusIcon = "fas fa-cog fa-3x text-primary mb-2 fa-spin";
                                break;
                            case "shipped":
                                statusClass = "text-info";
                                statusIcon = "fas fa-shipping-fast fa-3x text-info mb-2";
                                break;
                            case "completed":
                            case "delivered":
                                statusClass = "text-success";
                                statusIcon = "fas fa-check-circle fa-3x text-success mb-2";
                                displayStatus = "Completed";
                                break;
                            case "cancelled":
                                statusClass = "text-danger";
                                statusIcon = "fas fa-times-circle fa-3x text-danger mb-2";
                                break;
                            default:
                                statusClass = "text-secondary";
                                statusIcon = "fas fa-question-circle fa-3x text-secondary mb-2";
                                break;
                        }
                    }
                    
                    <i class="@statusIcon"></i>
                    <h5 class="@statusClass">@displayStatus</h5>
                </div>

                <h6>Update Status</h6>
                <form asp-action="UpdateStatus" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <div class="mb-3">
                        <select name="status" class="form-select">
                            <option value="Pending" selected="@(Model.Status == "Pending")">Pending</option>
                            <option value="Processing" selected="@(Model.Status == "Processing")">Processing</option>
                            <option value="Shipped" selected="@(Model.Status == "Shipped")">Shipped</option>
                            <option value="Completed" selected="@(Model.Status == "Completed" || Model.Status == "Delivered")">Completed</option>
                            <option value="Cancelled" selected="@(Model.Status == "Cancelled")">Cancelled</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-save"></i> Update Status
                    </button>
                </form>

                <hr>

                <h6>Quick Actions</h6>
                <div class="d-grid gap-2">
                    <button class="btn btn-outline-info" onclick="printOrder()">
                        <i class="fas fa-print"></i> Print Order
                    </button>
                    <button class="btn btn-outline-success" onclick="emailCustomer()">
                        <i class="fas fa-envelope"></i> Email Customer
                    </button>
                    <button class="btn btn-outline-danger" onclick="deleteOrder(@Model.Id)">
                        <i class="fas fa-trash"></i> Delete Order
                    </button>
                </div>
            </div>
        </div>

        <!-- Order Timeline -->
        <div class="card shadow">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Order Timeline</h6>
            </div>
            <div class="card-body">
                <div class="timeline">
                    <div class="timeline-item active">
                        <div class="timeline-marker bg-success"></div>
                        <div class="timeline-content">
                            <h6 class="mb-1">Order Placed</h6>
                            <small class="text-muted">@Model.OrderDate.ToString("MMM dd, yyyy HH:mm")</small>
                        </div>
                    </div>
                    
                    @if (Model.Status != "Pending")
                    {
                        <div class="timeline-item active">
                            <div class="timeline-marker bg-primary"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Order Confirmed</h6>
                                <small class="text-muted">Status: @Model.Status</small>
                            </div>
                        </div>
                    }
                    
                    @if (Model.Status == "Shipped" || Model.Status == "Completed" || Model.Status == "Delivered")
                    {
                        <div class="timeline-item active">
                            <div class="timeline-marker bg-info"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Order Shipped</h6>
                                <small class="text-muted">In transit</small>
                            </div>
                        </div>
                    }
                    
                    @if (Model.Status == "Completed" || Model.Status == "Delivered")
                    {
                        <div class="timeline-item active">
                            <div class="timeline-marker bg-success"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Order Delivered</h6>
                                <small class="text-muted">Completed</small>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function printOrder() {
            window.print();
        }
        
        function emailCustomer() {
            alert('Email functionality would be implemented here');
        }
        
        function deleteOrder(orderId) {
            if (confirm('Are you sure you want to delete this order? This action cannot be undone.')) {
                $.ajax({
                    url: '@Url.Action("Delete", "Order")',
                    type: 'POST',
                    data: {
                        id: orderId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function() {
                        window.location.href = '@Url.Action("Index", "Order")';
                    },
                    error: function() {
                        alert('Error deleting order. Please try again.');
                    }
                });
            }
        }
    </script>
}

@section Styles {
    <style>
        .timeline {
            position: relative;
            padding-left: 20px;
        }
        
        .timeline::before {
            content: '';
            position: absolute;
            left: 10px;
            top: 0;
            bottom: 0;
            width: 2px;
            background: #e9ecef;
        }
        
        .timeline-item {
            position: relative;
            margin-bottom: 20px;
        }
        
        .timeline-marker {
            position: absolute;
            left: -15px;
            top: 5px;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            border: 2px solid #fff;
            box-shadow: 0 0 0 2px #e9ecef;
        }
        
        .timeline-item.active .timeline-marker {
            box-shadow: 0 0 0 2px #007bff;
        }
        
        .timeline-content {
            padding-left: 10px;
        }
        
        @@media print {
            .btn, .card-header, .timeline {
                display: none !important;
            }
        }
    </style>
}
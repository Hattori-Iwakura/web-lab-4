@* filepath: Areas/Admin/Views/Product/Index.cshtml *@
@model web_lab_4.Models.ViewModels.ProductFilterViewModel

@{
    @* ViewData["Title"] = "Products Management"; *@
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">
            <i class="fas fa-boxes"></i> Products Management
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a asp-action="Add" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add New Product
            </a>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Total Products</div>
                            <div class="h5 mb-0 font-weight-bold text-dark">@Model.TotalProducts</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-boxes fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Low Stock</div>
                            <div class="h5 mb-0 font-weight-bold text-dark">@Model.LowStockCount</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exclamation-triangle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">Expired Products</div>
                            <div class="h5 mb-0 font-weight-bold text-dark">@Model.ExpiredCount</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-calendar-times fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Available Products</div>
                            <div class="h5 mb-0 font-weight-bold text-dark">@Model.AvailableCount</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Panel -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-filter"></i> Filter Products
                <button class="btn btn-sm btn-outline-primary float-right" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse">
                    <i class="fas fa-chevron-down"></i>
                </button>
            </h6>
        </div>
        <div class="collapse" id="filterCollapse">
            <div class="card-body">
                <form asp-action="Index" method="get">
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="searchTerm" class="form-label">Search</label>
                            <input type="text" class="form-control" id="searchTerm" 
                                   asp-for="Filter.SearchTerm" 
                                   placeholder="Search by name, brand, description...">
                        </div>

                        <div class="col-md-4 mb-3">
                            <label for="categoryId" class="form-label">Category</label>
                            <select class="form-control" id="categoryId" asp-for="Filter.CategoryId">
                                <option value="">All Categories</option>
                                @if (Model?.Categories != null)
                                {
                                    @foreach (var category in Model.Categories)
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                }
                            </select>
                        </div>

                        <div class="col-md-4 mb-3">
                            <label for="brand" class="form-label">Brand</label>
                            <select class="form-control" id="brand" asp-for="Filter.Brand">
                                <option value="">All Brands</option>
                                @if (Model?.Brands != null)
                                {
                                    @foreach (var brand in Model.Brands)
                                    {
                                        <option value="@brand">@brand</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label for="minPrice" class="form-label">Min Price</label>
                            <input type="number" class="form-control" asp-for="Filter.MinPrice" step="0.01" min="0">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="maxPrice" class="form-label">Max Price</label>
                            <input type="number" class="form-control" asp-for="Filter.MaxPrice" step="0.01" min="0">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="minStock" class="form-label">Min Stock</label>
                            <input type="number" class="form-control" asp-for="Filter.MinStock" min="0">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="maxStock" class="form-label">Max Stock</label>
                            <input type="number" class="form-control" asp-for="Filter.MaxStock" min="0">
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label for="sortBy" class="form-label">Sort By</label>
                            <select class="form-control" asp-for="Filter.SortBy">
                                <option value="Name">Name</option>
                                <option value="Price">Price</option>
                                <option value="Stock">Stock</option>
                                <option value="Category">Category</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="sortDirection" class="form-label">Sort Direction</label>
                            <select class="form-control" asp-for="Filter.SortDirection">
                                <option value="asc">Ascending</option>
                                <option value="desc">Descending</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Status Filters</label>
                            <div class="d-flex">
                                <div class="form-check me-3">
                                    <input class="form-check-input" type="checkbox" asp-for="Filter.IsAvailable">
                                    <label class="form-check-label" asp-for="Filter.IsAvailable">Available Only</label>
                                </div>
                                <div class="form-check me-3">
                                    <input class="form-check-input" type="checkbox" asp-for="Filter.IsExpired">
                                    <label class="form-check-label" asp-for="Filter.IsExpired">Expired Only</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" asp-for="Filter.IsLowStock">
                                    <label class="form-check-label" asp-for="Filter.IsLowStock">Low Stock Only</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search"></i> Apply Filter
                            </button>
                            <a href="@Url.Action("Index")" class="btn btn-secondary">
                                <i class="fas fa-undo"></i> Reset
                            </a>
                            <span class="ml-3 text-muted">
                                Showing @(Model?.Products?.Count() ?? 0) of @(Model?.TotalItems ?? 0) products
                            </span>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Products Table -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Products List</h6>
        </div>
        <div class="card-body">
            @if (Model?.Products?.Any() == true)
            {
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Image</th>
                                <th>Name</th>
                                <th>Category</th>
                                <th>Price</th>
                                <th>Stock</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Products)
                            {
                                <tr>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                                        {
                                            <img src="@item.ImageUrl" alt="@item.Name" style="width: 50px; height: 50px; object-fit: cover;" class="rounded">
                                        }
                                        else
                                        {
                                            <div class="bg-light d-flex align-items-center justify-content-center rounded" style="width: 50px; height: 50px;">
                                                <i class="fas fa-image text-muted"></i>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <strong>@item.Name</strong>
                                        @if (!string.IsNullOrEmpty(item.Brand))
                                        {
                                            <br><small class="text-muted">@item.Brand</small>
                                        }
                                    </td>
                                    <td>@(item.Category?.Name ?? "No Category")</td>
                                    <td>$@item.Price.ToString("F2")</td>
                                    <td>
                                        @if (item.StockQuantity <= 0)
                                        {
                                            <span class="badge bg-danger text-white">@item.StockQuantity</span>
                                        }
                                        else if (item.StockQuantity <= 10)
                                        {
                                            <span class="badge bg-warning text-dark">@item.StockQuantity</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success text-white">@item.StockQuantity</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!item.IsAvailable)
                                        {
                                            <span class="badge bg-secondary text-white">
                                                <i class="fas fa-times"></i> Unavailable
                                            </span>
                                        }
                                        else if (item.StockQuantity <= 0)
                                        {
                                            <span class="badge bg-danger text-white">
                                                <i class="fas fa-times-circle"></i> Out Of Stock
                                            </span>
                                        }
                                        else if (item.StockQuantity <= 10)
                                        {
                                            <span class="badge bg-warning text-dark">
                                                <i class="fas fa-exclamation-triangle"></i> Low On Stock
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success text-white">
                                                <i class="fas fa-check"></i> Available
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Display" asp-route-id="@item.Id" class="btn btn-sm btn-info">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-sm btn-warning">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Product pagination">
                        <ul class="pagination justify-content-center mt-4">
                            <!-- First Page -->
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@GetPageUrl(1)">
                                        <i class="fas fa-angle-double-left"></i>
                                    </a>
                                </li>
                            }

                            <!-- Previous Page -->
                            @if (Model.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@GetPageUrl(Model.CurrentPage - 1)">
                                        <i class="fas fa-angle-left"></i>
                                    </a>
                                </li>
                            }

                            <!-- Page Numbers -->
                            @{
                                var startPage = Math.Max(1, Model.CurrentPage - 2);
                                var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                            }

                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@GetPageUrl(i)">@i</a>
                                </li>
                            }

                            <!-- Next Page -->
                            @if (Model.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@GetPageUrl(Model.CurrentPage + 1)">
                                        <i class="fas fa-angle-right"></i>
                                    </a>
                                </li>
                            }

                            <!-- Last Page -->
                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@GetPageUrl(Model.TotalPages)">
                                        <i class="fas fa-angle-double-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>

                    <!-- Pagination Info -->
                    <div class="text-center text-muted mt-2">
                        Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to 
                        @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems)) 
                        of @Model.TotalItems products
                        (Page @Model.CurrentPage of @Model.TotalPages)
                    </div>
                }
            }
            else
            {
                <div class="text-center py-4">
                    <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No products found</h5>
                    <p class="text-muted">Try adjusting your filter criteria.</p>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetPageUrl(int page)
    {
        var routeValues = new Dictionary<string, object>
        {
            ["page"] = page,
            ["pageSize"] = Model.PageSize
        };

        // Add filter parameters
        if (!string.IsNullOrEmpty(Model.Filter.SearchTerm))
            routeValues["Filter.SearchTerm"] = Model.Filter.SearchTerm;
        if (Model.Filter.CategoryId.HasValue)
            routeValues["Filter.CategoryId"] = Model.Filter.CategoryId.Value;
        if (!string.IsNullOrEmpty(Model.Filter.Brand))
            routeValues["Filter.Brand"] = Model.Filter.Brand;
        if (Model.Filter.MinPrice.HasValue)
            routeValues["Filter.MinPrice"] = Model.Filter.MinPrice.Value;
        if (Model.Filter.MaxPrice.HasValue)
            routeValues["Filter.MaxPrice"] = Model.Filter.MaxPrice.Value;
        if (Model.Filter.MinStock.HasValue)
            routeValues["Filter.MinStock"] = Model.Filter.MinStock.Value;
        if (Model.Filter.MaxStock.HasValue)
            routeValues["Filter.MaxStock"] = Model.Filter.MaxStock.Value;
        routeValues["Filter.IsAvailable"] = Model.Filter.IsAvailable;
        routeValues["Filter.IsExpired"] = Model.Filter.IsExpired;
        routeValues["Filter.IsLowStock"] = Model.Filter.IsLowStock;
        if (Model.Filter.ExpiryFromDate.HasValue)
            routeValues["Filter.ExpiryFromDate"] = Model.Filter.ExpiryFromDate.Value.ToString("yyyy-MM-dd");
        if (Model.Filter.ExpiryToDate.HasValue)
            routeValues["Filter.ExpiryToDate"] = Model.Filter.ExpiryToDate.Value.ToString("yyyy-MM-dd");
        if (!string.IsNullOrEmpty(Model.Filter.SortBy))
            routeValues["Filter.SortBy"] = Model.Filter.SortBy;
        if (!string.IsNullOrEmpty(Model.Filter.SortDirection))
            routeValues["Filter.SortDirection"] = Model.Filter.SortDirection;

        return Url.Action("Index", routeValues);
    }
}

@section Scripts {
    <script>
        function resetFilter() {
            window.location.href = '@Url.Action("Index")';
        }

        function toggleAvailability(productId) {
            if (confirm('Are you sure you want to toggle this product availability?')) {
                fetch('@Url.Action("ToggleAvailability")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: JSON.stringify({ id: productId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error occurred while updating product availability.');
                });
            }
        }

        $(document).ready(function() {
            // Quick filter buttons
            $('.btn-toolbar').append(`
                <div class="btn-group ml-2" role="group">
                    <button type="button" class="btn btn-outline-warning btn-sm" onclick="quickFilter('lowstock')">
                        <i class="fas fa-exclamation-triangle"></i> Low Stock
                    </button>
                    <button type="button" class="btn btn-outline-danger btn-sm" onclick="quickFilter('expired')">
                        <i class="fas fa-calendar-times"></i> Expired
                    </button>
                    <button type="button" class="btn btn-outline-success btn-sm" onclick="quickFilter('available')">
                        <i class="fas fa-check-circle"></i> Available
                    </button>
                </div>
            `);
        });

        function quickFilter(type) {
            const baseUrl = '@Url.Action("Index")';
            let url = baseUrl;
            
            switch(type) {
                case 'lowstock':
                    url += '?Filter.IsLowStock=true';
                    break;
                case 'expired':
                    url += '?Filter.IsExpired=true';
                    break;
                case 'available':
                    url += '?Filter.IsAvailable=true';
                    break;
            }
            
            window.location.href = url;
        }
    </script>
}

<style>
    /* Custom Badge Styles for Bootstrap 4 compatibility */
    .badge {
        display: inline-block;
        padding: 0.375rem 0.75rem;
        font-size: 0.75rem;
        font-weight: 600;
        line-height: 1;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: 0.375rem;
    }

    .bg-success {
        background-color: #28a745 !important;
    }

    .bg-danger {
        background-color: #dc3545 !important;
    }

    .bg-warning {
        background-color: #ffc107 !important;
    }

    .bg-secondary {
        background-color: #6c757d !important;
    }

    .bg-info {
        background-color: #17a2b8 !important;
    }

    .text-white {
        color: #fff !important;
    }

    .text-dark {
        color: #343a40 !important;
    }

    /* Card border styles */
    .border-left-primary { border-left: 0.25rem solid #4e73df !important; }
    .border-left-success { border-left: 0.25rem solid #1cc88a !important; }
    .border-left-warning { border-left: 0.25rem solid #f6c23e !important; }
    .border-left-danger { border-left: 0.25rem solid #e74a3b !important; }
    .text-xs { font-size: 0.7rem; }

    /* Table improvements */
    .table td, .table th {
        vertical-align: middle;
    }

    .table-responsive {
        border: none;
    }

    /* Button improvements */
    .btn-group .btn {
        margin-right: 2px;
    }

    .btn-group .btn:last-child {
        margin-right: 0;
    }
</style>
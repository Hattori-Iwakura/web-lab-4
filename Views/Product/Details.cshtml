@model web_lab_4.Models.Product

@{
    ViewData["Title"] = Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var category = ViewBag.Category as web_lab_4.Models.Category;
    var relatedProducts = ViewBag.RelatedProducts as List<web_lab_4.Models.Product>;
}

<div class="container my-5">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="Product" asp-action="Index">Products</a></li>
            @if (category != null)
            {
                <li class="breadcrumb-item"><a asp-controller="Product" asp-action="Index" asp-route-categoryId="@category.Id">@category.Name</a></li>
            }
            <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
        </ol>
    </nav>

    <div class="row">
        <!-- Product Images -->
        <div class="col-lg-6">
            <div class="product-image-container">
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="@Model.ImageUrl" alt="@Model.Name" class="img-fluid main-product-image rounded shadow" id="mainImage">
                }
                else
                {
                    <div class="no-image d-flex align-items-center justify-content-center bg-light rounded shadow">
                        <i class="fas fa-image fa-5x text-muted"></i>
                    </div>
                }

                <!-- Image gallery (if you have multiple images) -->
                @if (Model.Images != null && Model.Images.Any())
                {
                    <div class="image-gallery mt-3">
                        <div class="row">
                            @foreach (var image in Model.Images.Take(4))
                            {
                                <div class="col-3">
                                    <img src="@image.Url" alt="@Model.Name" class="img-fluid gallery-thumb rounded" onclick="changeMainImage('@image.Url')">
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Product Information -->
        <div class="col-lg-6">
            <div class="product-info">
                <!-- Product Title -->
                <h1 class="product-title mb-3">@Model.Name</h1>

                <!-- Category Badge -->
                @if (category != null)
                {
                    <div class="mb-3">
                        <span class="badge bg-primary fs-6">
                            <i class="fas fa-tag"></i> @category.Name
                        </span>
                    </div>
                }

                <!-- Price -->
                <div class="price-section mb-4">
                    <h2 class="price text-success mb-0">@Model.Price.ToString("C")</h2>
                    <small class="text-muted">Tax included</small>
                </div>

                <!-- Rating (placeholder - you can implement this later) -->
                <div class="rating-section mb-4">
                    <div class="stars">
                        <i class="fas fa-star text-warning"></i>
                        <i class="fas fa-star text-warning"></i>
                        <i class="fas fa-star text-warning"></i>
                        <i class="fas fa-star text-warning"></i>
                        <i class="far fa-star text-warning"></i>
                        <span class="ms-2 text-muted">(4.0/5) - 23 reviews</span>
                    </div>
                </div>

                <!-- Description -->
                <div class="description-section mb-4">
                    <h5>Description</h5>
                    <p class="text-muted">@Model.Description</p>
                </div>

                <!-- Product Details -->
                <div class="product-details mb-4">
                    <h5>Product Details</h5>
                    <ul class="list-unstyled">
                        <li><strong>Product ID:</strong> #@Model.Id</li>
                        <li><strong>Category:</strong> @(category?.Name ?? "Uncategorized")</li>
                        <li><strong>Availability:</strong> <span class="text-success">In Stock</span></li>
                        <li><strong>SKU:</strong> PRD-@Model.Id.ToString("D6")</li>
                    </ul>
                </div>

                <!-- Add to Cart Section -->
                <div class="add-to-cart-section">
                    <form asp-controller="ShoppingCart" asp-action="AddToCart" method="post" class="add-to-cart-form">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        
                        <!-- Quantity Selector -->
                        <div class="quantity-section mb-3">
                            <label class="form-label">Quantity:</label>
                            <div class="input-group quantity-input" style="max-width: 150px;">
                                <button class="btn btn-outline-secondary" type="button" onclick="decreaseQuantity()">
                                    <i class="fas fa-minus"></i>
                                </button>
                                <input type="number" name="quantity" id="quantity" class="form-control text-center" value="1" min="1" max="10">
                                <button class="btn btn-outline-secondary" type="button" onclick="increaseQuantity()">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="action-buttons">
                            <button type="submit" class="btn btn-primary btn-lg me-2">
                                <i class="fas fa-shopping-cart"></i> Add to Cart
                            </button>
                            <button type="button" class="btn btn-outline-danger btn-lg" onclick="addToWishlist(@Model.Id)">
                                <i class="far fa-heart"></i> Wishlist
                            </button>
                        </div>

                        <div class="additional-actions mt-3">
                            <div class="d-grid gap-2">
                                <button type="button" class="btn btn-success btn-lg" onclick="buyNow()">
                                    <i class="fas fa-bolt"></i> Buy Now
                                </button>
                            </div>
                        </div>
                    </form>
                </div>

                <!-- Social Share -->
                <div class="social-share mt-4 pt-4 border-top">
                    <h6>Share this product:</h6>
                    <div class="social-buttons">
                        <button class="btn btn-outline-primary btn-sm me-2" onclick="shareOnFacebook()">
                            <i class="fab fa-facebook-f"></i> Facebook
                        </button>
                        <button class="btn btn-outline-info btn-sm me-2" onclick="shareOnTwitter()">
                            <i class="fab fa-twitter"></i> Twitter
                        </button>
                        <button class="btn btn-outline-secondary btn-sm" onclick="copyProductLink()">
                            <i class="fas fa-link"></i> Copy Link
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Features Tab -->
    <div class="row mt-5">
        <div class="col-12">
            <ul class="nav nav-tabs" id="productTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description" type="button">
                        <i class="fas fa-info-circle"></i> Description
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="specifications-tab" data-bs-toggle="tab" data-bs-target="#specifications" type="button">
                        <i class="fas fa-list"></i> Specifications
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button">
                        <i class="fas fa-star"></i> Reviews
                    </button>
                </li>
            </ul>
            <div class="tab-content" id="productTabContent">
                <div class="tab-pane fade show active" id="description" role="tabpanel">
                    <div class="p-4">
                        <h5>Product Description</h5>
                        <p>@Model.Description</p>
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.</p>
                    </div>
                </div>
                <div class="tab-pane fade" id="specifications" role="tabpanel">
                    <div class="p-4">
                        <h5>Specifications</h5>
                        <table class="table table-striped">
                            <tr><td><strong>Brand</strong></td><td>Blue Archive</td></tr>
                            <tr><td><strong>Model</strong></td><td>@Model.Name</td></tr>
                            <tr><td><strong>Category</strong></td><td>@(category?.Name ?? "General")</td></tr>
                            <tr><td><strong>Price</strong></td><td>@Model.Price.ToString("C")</td></tr>
                            <tr><td><strong>Availability</strong></td><td>In Stock</td></tr>
                        </table>
                    </div>
                </div>
                <div class="tab-pane fade" id="reviews" role="tabpanel">
                    <div class="p-4">
                        <h5>Customer Reviews</h5>
                        <div class="review-item mb-3 p-3 border rounded">
                            <div class="d-flex justify-content-between">
                                <strong>John Doe</strong>
                                <div class="stars">
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                </div>
                            </div>
                            <small class="text-muted">2 days ago</small>
                            <p class="mt-2">Great product! Highly recommended.</p>
                        </div>
                        <button class="btn btn-outline-primary">Write a Review</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Related Products -->
    @if (relatedProducts != null && relatedProducts.Any())
    {
        <div class="row mt-5">
            <div class="col-12">
                <h3 class="mb-4">Related Products</h3>
                <div class="row">
                    @foreach (var relatedProduct in relatedProducts)
                    {
                        <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                            <div class="card product-card h-100">
                                <div class="card-img-container">
                                    @if (!string.IsNullOrEmpty(relatedProduct.ImageUrl))
                                    {
                                        <img src="@relatedProduct.ImageUrl" class="card-img-top" alt="@relatedProduct.Name">
                                    }
                                    else
                                    {
                                        <div class="no-image-placeholder">
                                            <i class="fas fa-image fa-3x text-muted"></i>
                                        </div>
                                    }
                                </div>
                                <div class="card-body d-flex flex-column">
                                    <h6 class="card-title">@relatedProduct.Name</h6>
                                    <p class="card-text text-muted small flex-grow-1">@relatedProduct.Description?.Substring(0, Math.Min(relatedProduct.Description.Length, 60))...</p>
                                    <div class="mt-auto">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="price text-success fw-bold">@relatedProduct.Price.ToString("C")</span>
                                            <a asp-action="Details" asp-route-id="@relatedProduct.Id" class="btn btn-outline-primary btn-sm">View</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Quantity controls
        function increaseQuantity() {
            const quantityInput = document.getElementById('quantity');
            const currentValue = parseInt(quantityInput.value);
            const maxValue = parseInt(quantityInput.max);
            if (currentValue < maxValue) {
                quantityInput.value = currentValue + 1;
            }
        }

        function decreaseQuantity() {
            const quantityInput = document.getElementById('quantity');
            const currentValue = parseInt(quantityInput.value);
            const minValue = parseInt(quantityInput.min);
            if (currentValue > minValue) {
                quantityInput.value = currentValue - 1;
            }
        }

        // Image gallery
        function changeMainImage(imageSrc) {
            document.getElementById('mainImage').src = imageSrc;
        }

        // Add to cart with animation
        $('.add-to-cart-form').on('submit', function(e) {
            e.preventDefault();
            
            const form = this;
            const btn = $(form).find('button[type="submit"]');
            const originalText = btn.html();
            
            // Show loading state
            btn.html('<i class="fas fa-spinner fa-spin"></i> Adding...');
            btn.prop('disabled', true);
            
            $.ajax({
                url: $(form).attr('action'),
                type: 'POST',
                data: $(form).serialize(),
                success: function(response) {
                    btn.html('<i class="fas fa-check"></i> Added!');
                    btn.removeClass('btn-primary').addClass('btn-success');
                    
                    // Show success message
                    showToast('Product added to cart successfully!', 'success');
                    
                    // Reset button after 2 seconds
                    setTimeout(function() {
                        btn.html(originalText);
                        btn.removeClass('btn-success').addClass('btn-primary');
                        btn.prop('disabled', false);
                    }, 2000);
                },
                error: function() {
                    btn.html(originalText);
                    btn.prop('disabled', false);
                    showToast('Error adding product to cart. Please try again.', 'error');
                }
            });
        });

        // Buy now functionality
        function buyNow() {
            const quantity = document.getElementById('quantity').value;
            const productId = @Model.Id;
            
            // Add to cart first, then redirect to checkout
            $.ajax({
                url: '@Url.Action("AddToCart", "ShoppingCart")',
                type: 'POST',
                data: {
                    productId: productId,
                    quantity: quantity
                },
                success: function() {
                    window.location.href = '@Url.Action("Checkout", "ShoppingCart")';
                },
                error: function() {
                    showToast('Error processing order. Please try again.', 'error');
                }
            });
        }

        // Wishlist functionality
        function addToWishlist(productId) {
            // Implement wishlist functionality
            showToast('Wishlist functionality coming soon!', 'info');
        }

        // Social sharing
        function shareOnFacebook() {
            const url = encodeURIComponent(window.location.href);
            window.open(`https://www.facebook.com/sharer/sharer.php?u=${url}`, '_blank');
        }

        function shareOnTwitter() {
            const url = encodeURIComponent(window.location.href);
            const text = encodeURIComponent('@Model.Name - Check out this amazing product!');
            window.open(`https://twitter.com/intent/tweet?url=${url}&text=${text}`, '_blank');
        }

        function copyProductLink() {
            navigator.clipboard.writeText(window.location.href).then(function() {
                showToast('Product link copied to clipboard!', 'success');
            });
        }

        // Toast notification function
        function showToast(message, type = 'info') {
            // Create toast HTML
            const toastHtml = `
                <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : type === 'error' ? 'danger' : 'info'} border-0" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `;
            
            // Add to toast container
            let toastContainer = document.querySelector('.toast-container');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
                document.body.appendChild(toastContainer);
            }
            
            toastContainer.insertAdjacentHTML('beforeend', toastHtml);
            
            // Show toast
            const toastElement = toastContainer.lastElementChild;
            const toast = new bootstrap.Toast(toastElement);
            toast.show();
            
            // Remove toast after hiding
            toastElement.addEventListener('hidden.bs.toast', () => {
                toastElement.remove();
            });
        }
    </script>
}

@section Styles {
    <style>
        .main-product-image {
            width: 100%;
            height: 500px;
            object-fit: cover;
            cursor: zoom-in;
        }

        .no-image {
            width: 100%;
            height: 500px;
        }

        .gallery-thumb {
            width: 100%;
            height: 80px;
            object-fit: cover;
            cursor: pointer;
            transition: opacity 0.3s;
        }

        .gallery-thumb:hover {
            opacity: 0.7;
        }

        .product-title {
            color: #2c3e50;
            font-weight: 600;
        }

        .price {
            font-size: 2rem;
            font-weight: 700;
        }

        .quantity-input input {
            border-left: none;
            border-right: none;
        }

        .quantity-input button {
            border: 1px solid #ced4da;
        }

        .product-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
            border: none;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .card-img-container {
            height: 200px;
            overflow: hidden;
        }

        .card-img-top {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .product-card:hover .card-img-top {
            transform: scale(1.05);
        }

        .no-image-placeholder {
            height: 200px;
            background: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .stars {
            color: #ffc107;
        }

        .social-buttons .btn {
            margin-right: 10px;
            margin-bottom: 10px;
        }

        .tab-content {
            border: 1px solid #dee2e6;
            border-top: none;
        }

        .review-item {
            background: #f8f9fa;
        }

        @@media (max-width: 768px) {
            .main-product-image {
                height: 300px;
            }

            .action-buttons {
                display: flex;
                flex-direction: column;
                gap: 10px;
            }

            .action-buttons .btn {
                margin-right: 0;
            }
        }
    </style>
}
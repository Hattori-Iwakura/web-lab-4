@* filepath: c:\Users\ASUS\Desktop\web-lab-4\Views\Product\Index.cshtml *@
@model IEnumerable<web_lab_4.Models.Product>

@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    // Pagination - Updated for 3 products per row, 4 rows = 12 products per page
    var pageSize = 12; // 4 rows x 3 products
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalProducts = ViewBag.TotalProducts ?? Model.Count();
    var totalPages = (int)Math.Ceiling((double)totalProducts / pageSize);
    
    // Current filters (giữ nguyên)
    var searchTerm = ViewBag.SearchTerm ?? "";
    var selectedCategory = ViewBag.SelectedCategory ?? "";
    var minPrice = ViewBag.MinPrice ?? "";
    var maxPrice = ViewBag.MaxPrice ?? "";
    var sortBy = ViewBag.SortBy ?? "";
    var brand = ViewBag.Brand ?? "";
    var flavor = ViewBag.Flavor ?? "";
    
    // Filter data (giữ nguyên)
    var categories = ViewBag.Categories as IEnumerable<web_lab_4.Models.Category> ?? new List<web_lab_4.Models.Category>();
    var brands = ViewBag.Brands as IEnumerable<string> ?? new List<string>();
    var flavors = ViewBag.Flavors as IEnumerable<string> ?? new List<string>();
}

<div class="container-fluid my-4">
    <div class="row">
        <!-- Left Sidebar - Filters -->
        <div class="col-lg-3 col-md-4 mb-4">
            <div class="sticky-top" style="top: 20px;">
                <!-- Header -->
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0">
                        <i class="fas fa-filter text-primary"></i> Filters
                    </h5>
                    <!-- Mobile toggle button -->
                    <button class="btn btn-outline-primary btn-sm d-md-none" type="button" data-bs-toggle="collapse" data-bs-target="#filterSidebar" aria-expanded="false">
                        <i class="fas fa-chevron-down"></i>
                    </button>
                </div>

                <!-- Filters Card -->
                <div class="collapse d-md-block" id="filterSidebar">
                    <div class="card shadow-sm">
                        <div class="card-body p-3">
                            <form asp-action="Index" method="get" id="filterForm">
                                <!-- Search -->
                                <div class="mb-3">
                                    <label class="form-label fw-bold">
                                        <i class="fas fa-search"></i> Search
                                    </label>
                                    <div class="input-group input-group-sm">
                                        <input type="text" name="searchTerm" value="@searchTerm" class="form-control" placeholder="Search products...">
                                        <button class="btn btn-outline-secondary" type="button" onclick="clearSearch()">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Category Filter -->
                                <div class="mb-3">
                                    <label class="form-label fw-bold">
                                        <i class="fas fa-tags"></i> Category
                                    </label>
                                    <select name="categoryId" class="form-select form-select-sm">
                                        <option value="">All Categories</option>
                                        @foreach (var category in categories)
                                        {
                                            <option value="@category.Id" selected="@(selectedCategory == category.Id.ToString())">
                                                @category.Name
                                            </option>
                                        }
                                    </select>
                                </div>

                                <!-- Brand Filter -->
                                <div class="mb-3">
                                    <label class="form-label fw-bold">
                                        <i class="fas fa-copyright"></i> Brand
                                    </label>
                                    <select name="brand" class="form-select form-select-sm">
                                        <option value="">All Brands</option>
                                        @foreach (var brandName in brands)
                                        {
                                            <option value="@brandName" selected="@(brand == brandName)">
                                                @brandName
                                            </option>
                                        }
                                    </select>
                                </div>

                                <!-- Price Range -->
                                <div class="mb-3">
                                    <label class="form-label fw-bold">
                                        <i class="fas fa-dollar-sign"></i> Price Range
                                    </label>
                                    <div class="row g-2">
                                        <div class="col-6">
                                            <input type="number" name="minPrice" value="@minPrice" class="form-control form-control-sm" placeholder="Min" min="0" step="0.01">
                                        </div>
                                        <div class="col-6">
                                            <input type="number" name="maxPrice" value="@maxPrice" class="form-control form-control-sm" placeholder="Max" min="0" step="0.01">
                                        </div>
                                    </div>
                                </div>

                                <!-- Flavor Filter -->
                                <div class="mb-3">
                                    <label class="form-label fw-bold">
                                        <i class="fas fa-leaf"></i> Flavor
                                    </label>
                                    <select name="flavor" class="form-select form-select-sm">
                                        <option value="">All Flavors</option>
                                        @foreach (var flavorName in flavors)
                                        {
                                            <option value="@flavorName" selected="@(flavor == flavorName)">
                                                @flavorName
                                            </option>
                                        }
                                    </select>
                                </div>

                                <!-- Sort Options -->
                                <div class="mb-3">
                                    <label class="form-label fw-bold">
                                        <i class="fas fa-sort"></i> Sort By
                                    </label>
                                    <select name="sortBy" class="form-select form-select-sm">
                                        <option value="">Default</option>
                                        @{
                                            var sortOptions = new[]
                                            {
                                                new { Value = "name_asc", Text = "Name A-Z" },
                                                new { Value = "name_desc", Text = "Name Z-A" },
                                                new { Value = "price_asc", Text = "Price Low to High" },
                                                new { Value = "price_desc", Text = "Price High to Low" },
                                                new { Value = "newest", Text = "Newest First" }
                                            };
                                        }
                                        @foreach (var option in sortOptions)
                                        {
                                            <option value="@option.Value" selected="@(sortBy == option.Value)">
                                                @option.Text
                                            </option>
                                        }
                                    </select>
                                </div>

                                <!-- Filter Buttons -->
                                <div class="d-grid gap-2">
                                    <button type="submit" class="btn btn-primary btn-sm">
                                        <i class="fas fa-search"></i> Apply Filters
                                    </button>
                                    <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                                        <i class="fas fa-undo"></i> Clear All
                                    </a>
                                </div>

                                <!-- Hidden field for pagination -->
                                <input type="hidden" name="page" value="1">
                            </form>
                        </div>
                    </div>

                    <!-- Active Filters Display -->
                    @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(selectedCategory) || !string.IsNullOrEmpty(brand) || !string.IsNullOrEmpty(flavor) || !string.IsNullOrEmpty(minPrice) || !string.IsNullOrEmpty(maxPrice))
                    {
                        <div class="card shadow-sm mt-3">
                            <div class="card-header bg-light py-2">
                                <h6 class="mb-0">
                                    <i class="fas fa-filter"></i> Active Filters
                                </h6>
                            </div>
                            <div class="card-body p-2">
                                <div class="d-flex flex-wrap gap-1">
                                    @if (!string.IsNullOrEmpty(searchTerm))
                                    {
                                        <span class="badge bg-primary">
                                            "@searchTerm"
                                            <a href="@Url.Action("Index", new { categoryId = selectedCategory, brand = brand, flavor = flavor, minPrice = minPrice, maxPrice = maxPrice, sortBy = sortBy, page = 1 })" class="text-white ms-1">×</a>
                                        </span>
                                    }
                                    
                                    @if (!string.IsNullOrEmpty(selectedCategory))
                                    {
                                        <span class="badge bg-info">
                                            @categories.FirstOrDefault(c => c.Id.ToString() == selectedCategory)?.Name
                                            <a href="@Url.Action("Index", new { searchTerm = searchTerm, brand = brand, flavor = flavor, minPrice = minPrice, maxPrice = maxPrice, sortBy = sortBy, page = 1 })" class="text-white ms-1">×</a>
                                        </span>
                                    }
                                    
                                    @if (!string.IsNullOrEmpty(brand))
                                    {
                                        <span class="badge bg-warning text-dark">
                                            @brand
                                            <a href="@Url.Action("Index", new { searchTerm = searchTerm, categoryId = selectedCategory, flavor = flavor, minPrice = minPrice, maxPrice = maxPrice, sortBy = sortBy, page = 1 })" class="text-dark ms-1">×</a>
                                        </span>
                                    }
                                    
                                    @if (!string.IsNullOrEmpty(flavor))
                                    {
                                        <span class="badge bg-success">
                                            @flavor
                                            <a href="@Url.Action("Index", new { searchTerm = searchTerm, categoryId = selectedCategory, brand = brand, minPrice = minPrice, maxPrice = maxPrice, sortBy = sortBy, page = 1 })" class="text-white ms-1">×</a>
                                        </span>
                                    }
                                    
                                    @if (!string.IsNullOrEmpty(minPrice) || !string.IsNullOrEmpty(maxPrice))
                                    {
                                        <span class="badge bg-secondary">
                                            $@(minPrice ?? "0") - $@(maxPrice ?? "∞")
                                            <a href="@Url.Action("Index", new { searchTerm = searchTerm, categoryId = selectedCategory, brand = brand, flavor = flavor, sortBy = sortBy, page = 1 })" class="text-white ms-1">×</a>
                                        </span>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Right Content - Products -->
        <div class="col-lg-9 col-md-8">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2>
                        <i class="fas fa-box text-primary"></i> Our Products
                        <small class="text-muted">(@totalProducts products found)</small>
                    </h2>
                </div>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-area="Admin" asp-controller="Product" asp-action="Add" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Add Product
                    </a>
                }
            </div>

            <!-- Products Grid -->
            @if (Model.Any())
            {
                <!-- Grid Container with responsive columns - Updated for 3 products per row -->
                <div class="row g-4 mb-4">
                    @foreach (var product in Model)
                    {
                        <div class="col-lg-4 col-md-6 col-sm-12">
                            <div class="product-card h-100 clickable-card" data-href="@Url.Action("Details", new { id = product.Id })">
                                <!-- Product Image -->
                                <div class="product-image-container">
                                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                                    {
                                        <img src="@product.ImageUrl" alt="@product.Name" class="product-image" />
                                    }
                                    else
                                    {
                                        <div class="product-image-placeholder">
                                            <i class="fas fa-dumbbell fa-3x text-muted"></i>
                                        </div>
                                    }
                                    
                                    <!-- Product Badge -->
                                    @if (!product.IsAvailable)
                                    {
                                        <span class="product-badge badge-unavailable">Unavailable</span>
                                    }
                                    else if (product.StockQuantity <= 0)
                                    {
                                        <span class="product-badge badge-out-of-stock">Out Of Stock</span>
                                    }
                                    else if (product.StockQuantity <= 10)
                                    {
                                        <span class="product-badge badge-low-stock">Low Stock</span>
                                    }
                                    else if (product.Price < 600000)
                                    {
                                        <span class="product-badge badge-sale">Best Value</span>
                                    }
                                    else if (product.Price > 1500000)
                                    {
                                        <span class="product-badge badge-premium">Premium</span>
                                    }
                                    else
                                    {
                                        <span class="product-badge badge-popular">Popular</span>
                                    }
                                </div>

                                <!-- Product Info (giữ nguyên toàn bộ phần này) -->
                                <div class="product-info">
                                    <div class="product-category mb-2">
                                        <span class="badge bg-secondary">@(product.Category?.Name ?? "General")</span>
                                    </div>
                                    
                                    <h5 class="product-title">
                                        <a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" 
                                           class="text-decoration-none">
                                            @product.Name
                                        </a>
                                    </h5>
                                    
                                    <!-- Product Description -->
                                    <p class="product-description text-muted small">
                                        @{
                                            var description = product.Description ?? "";
                                            var maxLength = 80;
                                        }
                                        @(description.Length > maxLength ? description.Substring(0, maxLength) + "..." : description)
                                    </p>
                                    
                                    <!-- Brand -->
                                    @if (!string.IsNullOrEmpty(product.Brand))
                                    {
                                        <p class="text-muted small mb-1">
                                            Brand: @product.Brand
                                        </p>
                                    }
                                    
                                    <!-- Weight Display -->
                                    @if (product.Weight > 0)
                                    {
                                        <p class="text-muted small mb-1">Weight: @product.DisplayWeight</p>
                                    }
                                    
                                    <!-- Stock Status -->
                                    <div class="mb-2">
                                        @if (!product.IsAvailable)
                                        {
                                            <span class="badge bg-secondary small">Unavailable</span>
                                        }
                                        else if (product.StockQuantity <= 0)
                                        {
                                            <span class="badge bg-danger small">Out Of Stock</span>
                                        }
                                        else if (product.StockQuantity <= 10)
                                        {
                                            <span class="badge bg-warning text-dark small">Low On Stock</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success small">In Stock</span>
                                        }
                                    </div>
                                    
                                    <!-- Product Rating -->
                                    <div class="product-rating mb-2">
                                        @{
                                            int reviewCount = (int)(ViewData[$"ReviewCount_{product.Id}"] ?? 0);
                                            double averageRating = (double)(ViewData[$"AverageRating_{product.Id}"] ?? 0.0);
                                            string displayRating = ViewData[$"DisplayRating_{product.Id}"]?.ToString() ?? "No rating";
                                        }
                                        
                                        @if (reviewCount > 0)
                                        {
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                @if (i <= averageRating)
                                                {
                                                    <i class="fas fa-star text-warning"></i>
                                                }
                                                else if (i - 0.5 <= averageRating)
                                                {
                                                    <i class="fas fa-star-half-alt text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star text-muted"></i>
                                                }
                                            }
                                            <small class="text-muted ms-1">(@reviewCount)</small>
                                        }
                                        else
                                        {
                                            <small class="text-muted">No reviews yet</small>
                                        }
                                    </div>

                                    <!-- Product Footer -->
                                    <div class="product-footer mt-auto">
                                        <div class="product-price">
                                            <span class="current-price text-primary fw-bold h5 mb-0">@product.Price.ToString("C")</span>
                                        </div>
                                        
                                        @if (product.IsAvailable && product.IsInStock && !product.IsExpired)
                                        {
                                            <button type="button" class="btn btn-primary btn-sm add-to-cart-btn" 
                                                    data-product-id="@product.Id"
                                                    onclick="event.stopPropagation();">
                                                <i class="fas fa-cart-plus"></i> Add to Cart
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-secondary btn-sm" disabled onclick="event.stopPropagation();">
                                                <i class="fas fa-ban"></i> Unavailable
                                            </button>
                                        }
                                    </div>
                                    
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <div class="admin-actions mt-2 pt-2 border-top">
                                            <div class="row g-1">
                                                <div class="col-6">
                                                    <a asp-area="Admin" asp-controller="Product" asp-action="Update" asp-route-id="@product.Id" 
                                                       class="btn btn-warning btn-sm w-100" onclick="event.stopPropagation();">
                                                        <i class="fas fa-edit"></i> Edit
                                                    </a>
                                                </div>
                                                <div class="col-6">
                                                    <a asp-area="Admin" asp-controller="Product" asp-action="Delete" asp-route-id="@product.Id" 
                                                       class="btn btn-danger btn-sm w-100" onclick="event.stopPropagation();">
                                                        <i class="fas fa-trash"></i> Delete
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @if (totalPages > 1)
                {
                    <nav aria-label="Product pagination">
                        <ul class="pagination justify-content-center">
                            <!-- Previous Page -->
                            <li class="page-item @(currentPage <= 1 ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { 
                                    searchTerm = searchTerm, 
                                    categoryId = selectedCategory, 
                                    brand = brand, 
                                    flavor = flavor, 
                                    minPrice = minPrice, 
                                    maxPrice = maxPrice, 
                                    sortBy = sortBy, 
                                    page = currentPage - 1 
                                })">
                                    <i class="fas fa-chevron-left"></i> Previous
                                </a>
                            </li>

                            <!-- First Page -->
                            @if (currentPage > 3)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { 
                                        searchTerm = searchTerm, 
                                        categoryId = selectedCategory, 
                                        brand = brand, 
                                        flavor = flavor, 
                                        minPrice = minPrice, 
                                        maxPrice = maxPrice, 
                                        sortBy = sortBy, 
                                        page = 1 
                                    })">1</a>
                                </li>
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }

                            <!-- Page Numbers -->
                            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { 
                                        searchTerm = searchTerm, 
                                        categoryId = selectedCategory, 
                                        brand = brand, 
                                        flavor = flavor, 
                                        minPrice = minPrice, 
                                        maxPrice = maxPrice, 
                                        sortBy = sortBy, 
                                        page = i 
                                    })">@i</a>
                                </li>
                            }

                            <!-- Last Page -->
                            @if (currentPage < totalPages - 2)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { 
                                        searchTerm = searchTerm, 
                                        categoryId = selectedCategory, 
                                        brand = brand, 
                                        flavor = flavor, 
                                        minPrice = minPrice, 
                                        maxPrice = maxPrice, 
                                        sortBy = sortBy, 
                                        page = totalPages 
                                    })">@totalPages</a>
                                </li>
                            }

                            <!-- Next Page -->
                            <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { 
                                    searchTerm = searchTerm, 
                                    categoryId = selectedCategory, 
                                    brand = brand, 
                                    flavor = flavor, 
                                    minPrice = minPrice, 
                                    maxPrice = maxPrice, 
                                    sortBy = sortBy, 
                                    page = currentPage + 1 
                                })">
                                    Next <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>

                    <!-- Pagination Info -->
                    <div class="text-center text-muted">
                        Showing page @currentPage of @totalPages 
                        (@((currentPage - 1) * pageSize + 1) - @Math.Min(currentPage * pageSize, totalProducts) of @totalProducts products)
                    </div>
                }
            }
            else
            {
                <!-- No Products Found -->
                <div class="text-center py-5">
                    <i class="fas fa-search fa-4x text-muted mb-3"></i>
                    <h4 class="text-muted">No Products Found</h4>
                    <p class="text-muted">Try adjusting your search criteria or browse all products.</p>
                    <a asp-action="Index" class="btn btn-primary">
                        <i class="fas fa-refresh"></i> Show All Products
                    </a>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-area="Admin" asp-controller="Product" asp-action="Add" class="btn btn-success ms-2">
                            <i class="fas fa-plus"></i> Add New Product
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-success text-white">
                <i class="fas fa-check-circle me-2"></i>
                <strong class="me-auto">Success</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body">
                @TempData["SuccessMessage"]
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Make cards clickable
        $(document).on('click', '.clickable-card', function(e) {
            // Check if the click target is not a button or link
            if (!$(e.target).is('button, a, input') && !$(e.target).closest('button, a, form').length) {
                var href = $(this).data('href');
                if (href) {
                    window.location.href = href;
                }
            }
        });

        // Clear search function
        function clearSearch() {
            $('input[name="searchTerm"]').val('');
            $('#filterForm').submit();
        }

        // Auto-submit form when filters change
        $('#filterForm select, #filterForm input[type="number"]').on('change', function() {
            // Reset to page 1 when filters change
            $('input[name="page"]').val(1);
            $('#filterForm').submit();
        });

        // Handle add to cart form submission
        $('.add-to-cart-form').on('submit', function(e) {
            e.preventDefault();
            e.stopPropagation(); // Prevent card click
            
            const form = $(this);
            const submitBtn = form.find('button[type="submit"]');
            const originalText = submitBtn.html();
            
            // Show loading state
            submitBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
            
            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: form.serialize(),
                success: function(response) {
                    // Show success animation
                    submitBtn.removeClass('btn-primary').addClass('btn-success')
                           .html('<i class="fas fa-check"></i> Added!');
                    
                    // Update cart count
                    if (window.updateCartCount) {
                        window.updateCartCount();
                    }
                    
                    // Reset button after 2 seconds
                    setTimeout(function() {
                        submitBtn.prop('disabled', false)
                               .removeClass('btn-success').addClass('btn-primary')
                               .html(originalText);
                    }, 2000);
                    
                    // Show toast notification
                    showToast('Product added to cart successfully!', 'success');
                },
                error: function() {
                    // Show error state
                    submitBtn.removeClass('btn-primary').addClass('btn-danger')
                           .html('<i class="fas fa-times"></i>');
                    
                    // Reset button after 2 seconds
                    setTimeout(function() {
                        submitBtn.prop('disabled', false)
                               .removeClass('btn-danger').addClass('btn-primary')
                               .html(originalText);
                    }, 2000);
                    
                    showToast('Error adding product to cart. Please try again.', 'error');
                }
            });
        });
        
        // Toast notification function
        function showToast(message, type) {
            const bgClass = type === 'success' ? 'bg-success' : 'bg-danger';
            const iconClass = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle';
            
            const toast = `
                <div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
                    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="toast-header ${bgClass} text-white">
                            <i class="fas ${iconClass} me-2"></i>
                            <strong class="me-auto">${type === 'success' ? 'Success' : 'Error'}</strong>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                        </div>
                        <div class="toast-body">
                            ${message}
                        </div>
                    </div>
                </div>
            `;
            
            $('body').append(toast);
            
            // Auto remove toast after 5 seconds
            setTimeout(function() {
                $('.toast').fadeOut();
            }, 5000);
        }
        
        // Auto-hide toasts
        $('.toast').toast({
            autohide: true,
            delay: 5000
        });

        // Smooth scroll to top when changing pages
        if (window.location.search.includes('page=')) {
            $('html, body').animate({
                scrollTop: $(".container-fluid").offset().top - 100
            }, 500);
        }
    </script>
}

@section Styles {
    <style>
        /* Product Card Styles - Same as Home/Index */
        .product-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
            overflow: hidden;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            min-height: 450px;
            display: flex;
            flex-direction: column;
        }

        .product-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 40px rgba(0,0,0,0.15);
        }

        .product-image-container {
            position: relative;
            height: 200px;
            overflow: hidden;
        }

        .product-image {
            width: 100%;
            height: 100%;
            object-fit: contain;
            transition: transform 0.3s ease;
        }

        .product-card:hover .product-image {
            transform: scale(1.1);
        }

        .product-image-placeholder {
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .product-badge {
            position: absolute;
            top: 10px;
            left: 10px;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: bold;
            z-index: 3;
        }

        .badge-sale {
            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
            color: white;
        }

        .badge-popular {
            background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%);
            color: white;
        }

        .badge-premium {
            background: linear-gradient(135deg, #9b59b6 0%, #8e44ad 100%);
            color: white;
        }

        .badge-out-of-stock {
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            color: white;
        }

        .badge-low-stock {
            background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%);
            color: #212529;
        }

        .badge-unavailable {
            background: linear-gradient(135deg, #6c757d 0%, #5a6268 100%);
            color: white;
        }

        .product-info {
            padding: 1.5rem;
            display: flex;
            flex-direction: column;
            flex-grow: 1;
        }

        .product-title {
            margin-bottom: 0.75rem;
            font-weight: 600;
        }

        .product-title a {
            color: #2c3e50;
            transition: color 0.3s ease;
        }

        .product-title a:hover {
            color: #0d6efd;
        }

        .product-description {
            font-size: 0.9rem;
            line-height: 1.5;
            margin-bottom: 1rem;
        }

        .product-rating {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .product-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: auto;
        }

        .product-price {
            display: flex;
            flex-direction: column;
        }

        .current-price {
            font-size: 1.25rem;
            font-weight: bold;
            color: #27ae60;
        }

        /* Admin actions styling */
        .admin-actions {
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover .admin-actions {
            opacity: 1;
        }

        /* Filter and other existing styles */
        .clickable-card {
            cursor: pointer;
        }
        
        .clickable-card:hover {
            border-color: #007bff !important;
        }
        
        .clickable-card:hover .product-title a {
            color: #007bff;
        }
        
        /* Prevent buttons from inheriting card cursor */
        .clickable-card button,
        .clickable-card a {
            cursor: pointer !important;
        }
        
        .btn {
            transition: all 0.2s ease;
        }
        
        .badge {
            font-size: 0.75rem;
        }
        
        .toast {
            min-width: 300px;
        }
        
        .pagination .page-link {
            color: #007bff;
        }
        
        .pagination .page-item.active .page-link {
            background-color: #007bff38;
            border-color: #007bff;
        }
        
        /* Sticky sidebar */
        .sticky-top {
            z-index: 1020;
        }
        
        /* Grid responsive adjustments */
        @@media (max-width: 576px) {
            .row > * {
                margin-bottom: 1rem;
            }
        }
        
        @@media (max-width: 768px) {
            .product-card {
                min-height: auto;
            }
        }
        
        /* Sidebar styling */
        #filterSidebar .card {
            border: 1px solid #dee2e6;
        }
        
        #filterSidebar .form-label {
            color: #495057;
            margin-bottom: 0.5rem;
        }
        
        /* Mobile filter toggle */
        @@media (max-width: 767.98px) {
            #filterSidebar {
                margin-bottom: 1rem;
            }
        }
        
        /* Improve form controls */
        .form-select-sm, .form-control-sm {
            font-size: 0.875rem;
        }

        /* Custom Bootstrap 4 compatible badge styles */
        .bg-success {
            background-color: #28a745 !important;
        }

        .bg-danger {
            background-color: #dc3545 !important;
        }

        .bg-warning {
            background-color: #ffc107 !important;
        }

        .bg-secondary {
            background-color: #6c757d !important;
        }

        .bg-info {
            background-color: #17a2b8 !important;
        }

        .text-white {
            color: #fff !important;
        }

        .text-dark {
            color: #343a40 !important;
        }

        /* Card border styles for statistics */
        .border-left-primary { 
            border-left: 0.25rem solid #4e73df !important; 
        }
        
        .border-left-success { 
            border-left: 0.25rem solid #1cc88a !important; 
        }
        
        .border-left-warning { 
            border-left: 0.25rem solid #f6c23e !important; 
        }
        
        .border-left-danger { 
            border-left: 0.25rem solid #e74a3b !important; 
        }
        
        .text-xs { 
            font-size: 0.7rem; 
        }

        /* Table improvements */
        .table td, .table th {
            vertical-align: middle;
            border-color: #e3e6f0;
        }

        .table-responsive {
            border-radius: 0.375rem;
        }

        /* Button improvements */
        .btn-group .btn {
            border-radius: 0;
        }

        .btn-group .btn:first-child {
            border-top-left-radius: 0.375rem;
            border-bottom-left-radius: 0.375rem;
        }

        .btn-group .btn:last-child {
            border-top-right-radius: 0.375rem;
            border-bottom-right-radius: 0.375rem;
        }
    </style>
}
